apiVersion: v1
kind: ConfigMap
metadata:
  name: monitoring-config
  namespace: crypto-collectors
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    
    rule_files:
      - "crypto-alerts.yml"
    
    scrape_configs:
      - job_name: 'crypto-collectors'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names: ['crypto-collectors']
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)

  crypto-alerts.yml: |
    groups:
      - name: crypto-collectors-alerts
        rules:
          - alert: PodCrashLooping
            expr: rate(kube_pod_container_status_restarts_total[15m]) > 0
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "Pod {{ $labels.pod }} is crash looping"
              description: "Pod {{ $labels.pod }} in namespace {{ $labels.namespace }} has restarted {{ $value }} times in the last 15 minutes"
          
          - alert: PodNotReady
            expr: kube_pod_status_ready{condition="false"} == 1
            for: 10m
            labels:
              severity: critical
            annotations:
              summary: "Pod {{ $labels.pod }} is not ready"
              description: "Pod {{ $labels.pod }} in namespace {{ $labels.namespace }} has been not ready for more than 10 minutes"
          
          - alert: HighCPUUsage
            expr: (sum(rate(container_cpu_usage_seconds_total[5m])) by (pod) / sum(container_spec_cpu_quota/container_spec_cpu_period) by (pod)) * 100 > 80
            for: 15m
            labels:
              severity: warning
            annotations:
              summary: "High CPU usage for pod {{ $labels.pod }}"
              description: "Pod {{ $labels.pod }} CPU usage is above 80% for more than 15 minutes"
          
          - alert: HighMemoryUsage
            expr: (container_memory_working_set_bytes / container_spec_memory_limit_bytes) * 100 > 85
            for: 10m
            labels:
              severity: warning
            annotations:
              summary: "High memory usage for pod {{ $labels.pod }}"
              description: "Pod {{ $labels.pod }} memory usage is above 85% for more than 10 minutes"
          
          - alert: DataCollectionStalled
            expr: increase(crypto_data_records_collected_total[1h]) < 100
            for: 30m
            labels:
              severity: critical
            annotations:
              summary: "Data collection has stalled"
              description: "Less than 100 records collected in the last hour, system may be down"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-monitor
  namespace: crypto-collectors
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service-monitor
  template:
    metadata:
      labels:
        app: service-monitor
    spec:
      containers:
      - name: monitor
        image: curlimages/curl:latest
        command: ["/bin/sh"]
        args:
        - -c
        - |
          while true; do
            echo "üîç $(date): Checking service health..."
            
            # Check each core service
            services=("enhanced-crypto-prices" "crypto-news-collector" "stock-sentiment-collector")
            
            for service in "${services[@]}"; do
              if curl -sf http://$service.crypto-collectors.svc.cluster.local:8000/health >/dev/null 2>&1; then
                echo "‚úÖ $service: healthy"
              else
                echo "‚ùå $service: unhealthy - alerting"
                # Here you could send alerts to external systems
              fi
            done
            
            # Sleep for 5 minutes
            sleep 300
          done
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 100m
            memory: 128Mi
      nodeSelector:
        solution-area: data-platform
      tolerations:
      - effect: NoSchedule
        key: data-platform
        operator: Equal
        value: "true"